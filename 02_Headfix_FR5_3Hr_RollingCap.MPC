\INPUTS: sent from box to program
^RightLever = 1
^LeftLever = 2

\OUTPUTS: sent to box from program
^Light = 7
^Clicker = 8
^Tone1 = 9 \white,red,black
^Tone2 = 10 \green
^Tone3 = 11 \blue
^Tone4 = 12 \orange
^Pump = 14
^Fan = 16
\VARIABLES:
\A = Right LeverPress
\B = Right LeverPress during TO
\C = Left LeverPress
\D = Left LeverPress during TO
\E = Lick On
\F = Lick Off
\G = FR Counter

DIM H = 2
Var_Alias Cocaine Dose = H(0) \H = Cocaine dose entered by user (for cap calculation) input as mg/kg/infusion
Var_Alias Window Size = H(1) \ Window size in minutes
Var_Alias Cocaine Cap = H(2) \ cap amount in mg/kg (per window size)

SEALED_ARRAY J = 50000     \Right LeverPress Timestamp
SEALED_ARRAY K = 50000     \Right LeverPress during TO
SEALED_ARRAY L = 50000     \Left LeverPress Timestamp
SEALED_ARRAY M = 50000     \Left LeverPress during TO
SEALED_ARRAY N = 50000     \Lick On Timestamp
SEALED_ARRAY O = 50000     \Lick Off Timestamp
SEALED_ARRAY P = 50000     \Pump/Devlivery Timestamp

\Q cap amount in deliveries, rounded
\R = Click Counter
\S for loop variable
\T = Session Timer
\U cocaine window tracker
\V = Delivery Tracker
\W
\X
\Y
\Z
\STATE SETS

S.S.1, \STATE SET 1: FR controls

S1,    \
       #START: ON ^Fan; SET R = 0; SET H(1) = H(1)*60; SET Q = H(2)/H(0); ~Q := Round(Q);~  ---> S2
S2,    \
       #R^RightLever: Z1; SET J(A) = T; ADD A; ADD G; IF G >= 5 [@RatioComplete, @TooFew] \FR requirement met?
                @RatioComplete:  IF V >= Q [@AtSessionCap, @BelowCap] \are total presses enough to meet the cap?
                        @AtSessionCap: IF T - (P(V-Q)) < H(1) [@CapHit, @BelowRolligCap] \is the pump timestamp Q back less than the window size?
                                        @CapHit:  SET G = 0; ---> S2
                                        @BelowRollingCap: ON ^Pump; ON ^Light; ON ^Tone1; ON ^Tone2; ON ^Tone4; SET P(V) = T; ADD V ---> S3 \12kHz tone = tone1(white), tone2 (green), tone4 (orange)
                        @BelowCap: ON ^Pump; ON ^Light; ON ^Tone1; ON ^Tone2; ON ^Tone4; SET P(V) = T; ADD V ---> S3 \12kHz tone = tone1(white), tone2 (green), tone4 (orange)
                @TooFew: ---> SX
        #R^LeftLever: SET L(C) = T; ADD C ---> SX
S3,    \
       0.5": OFF ^Pump; SET G = 0; OFF ^Tone1; OFF ^Tone2; OFF ^Tone4; ---> S4
       #R^RightLever: Z1; SET K(B) = T; ADD B ---> SX
       #R^LeftLever: SET M(D) = T; ADD D ---> SX

S4,        \TO duration, in addition to pump time
     19.5": OFF^Light ---> S2
     #R^RightLever: Z1; SET K(B) = T; ADD B; ---> SX
    #R^LeftLever: SET M(D) = T; ADD D ---> SX

\STATE SET 5: active timer and live med feed
S.S.5,
S1,    \use state set at the start of the program
       #START ---> S2
S2,    \update timer and trackers every millisecond in med
       0.01": SET T = T + 0.01; SHOW 1, Right LP, A, 2, Right TO LP, B, 3, Deliv, V, 4, Left LP, C, 5, Left TO LP, D, 6, Timer, T ---> SX

\STATE SET 6: program end
S.S.6,
S1,    \use state set at the start of the program
       #START ---> S2
S2,    \stop and save the data file after 6 hours
       180' ---> STOPSAVE

\STATE SET 7: z-pulse for active lever clicker
S.S.7,
S1,    \use state set at the start of the program
       #Z1: IF R = 0 [@Yes, @No]
                @Yes: ON ^Clicker; SET R = 1 ---> SX
                @No: OFF ^Clicker; SET R = 0 ---> SX

S.S.8,   \cocaine tracker
S1,
    0.01": SET H(0) = 4; SET H(1) = 60; SET H(2) = 90; --->S2 \set defaults

S2,
    #Start:  --->S3

S3,
   0.1": SHOW 11, Total Cocaine Taken, V*H(0); SHOW 12, Cocaine taken in window, U*H(0); --->S4

S4,

 0.1": SET U = 0; FOR S = 0 TO V-1;
         IF T-(P(S)) > H(1) [@DontCount, @Count]
             @DontCount: --->STAY
             @Count: ADD U --->STAY
         #END --->S3



